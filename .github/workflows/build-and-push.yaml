name: Instatube Server 빌드 & 푸쉬
on:
  workflow_dispatch:
  push:
    tags:
      - v*
env:
  INSTATUBE_AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  INSTATUBE_AWS_REGION: ${{ secrets.AWS_REGION }}
  INSTATUBE_AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
  INSTATUBE_DB_PASSWORD: asdf
  INSTATUBE_DB_URL: jdbc:mysql://localhost:3306/instatube?useSSL=false&allowPublicKeyRetrieval=true
  INSTATUBE_DB_USERNAME: root
  INSTATUBE_JWT_SECRET: alsdkjfalskdjfalskdfjalskdjfsldkfjsaldkfja
  INSTATUBE_NEO4J_PASSWORD: asdfasdf
  INSTATUBE_NEO4J_URL: bolt://localhost:7687
  INSTATUBE_NEO4J_USERNAME: neo4j
  INSTATUBE_NOTI_TABLE_NAME: ${{ secrets.NOTI_TABLE_NAME }}
  INSTATUBE_REDIS_HOST: localhost
  INSTATUBE_REDIS_PORT: 6379
permissions:
  contents: read
  packages: write
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: asdf
          MYSQL_DATABASE: instatube
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 3s
          --health-retries 5
          --health-start-period 3s
          --health-timeout 10s
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 3s
          --health-retries 5
          --health-start-period 3s
          --health-timeout 10s
      neo4j:
        image: neo4j:5-community
        env:
          NEO4J_AUTH: neo4j/asdfasdf
        ports:
          - 7687:7687
        options: >-
          --health-cmd "wget http://localhost:7474 || exit 1"
          --health-interval 3s
          --health-retries 5
          --health-start-period 3s
          --health-timeout 10s
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: gradlew 빌드
        run: ./gradlew build
      - name: 이미지 레지스트리 로그인
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 메타데이터 설정
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/instatube/instatube-server
          tags: |
            type=semver,pattern={{version}}
      - name: 이미지 빌드 & 푸쉬
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}